Microsoft (R) Macro Assembler Version 14.41.34120.0	    12/17/24 12:29:40
ASM.asm							     Page 1 - 1


				.586
				.model flat, stdcall
				includelib libucrt.lib
				includelib kernel32.lib
				includelib ..\Debug\FuncLib.lib
				ExitProcess PROTO:DWORD 
				EXTRN random: PROC 
				EXTRN toPow: PROC
				EXTRN writestr: PROC
				EXTRN writenum: PROC
				EXTRN writenumline: PROC
				EXTRN writestrline: PROC
				EXTRN system_pause:PROC
				.stack 4096
 00000000			.const
 00000000 CE F8 E8 E1 EA	ZEROMESSAGE  BYTE 'Ошибка:деление на ноль',0
	   E0 3A E4 E5 EB
	   E5 ED E8 E5 20
	   ED E0 20 ED EE
	   EB FC 00
 00000017 CE F8 E8 E1 EA	OVERFLOWMESSAGE  BYTE 'Ошибка:переполнение типа',0
	   E0 3A EF E5 F0
	   E5 EF EE EB ED
	   E5 ED E8 E5 20
	   F2 E8 EF E0 00
 00000030 63 61 6C 63 75		countsumcalculating_sum BYTE 'calculating sum', 0
	   6C 61 74 69 6E
	   67 20 73 75 6D
	   00
 00000040 63 61 6C 63 75		coutsomethcalculating_combocalculating_combo BYTE 'calculating combo', 0
	   6C 61 74 69 6E
	   67 20 63 6F 6D
	   62 6F 00
 00000052 00000004			main4 DWORD 4
 00000056 00000005			main5 DWORD 5
 0000005A 00000000			main0x0 DWORD 0
 0000005E 0000000A			main10 DWORD 10
 00000062 63 6F 75 6E 74		maincounting_more_then_10 BYTE 'counting more then 10', 0
	   69 6E 67 20 6D
	   6F 72 65 20 74
	   68 65 6E 20 31
	   30 00
 00000078 63 6F 75 6E 74		maincounting_less_then_10 BYTE 'counting less then 10', 0
	   69 6E 67 20 6C
	   65 73 73 20 74
	   68 65 6E 20 31
	   30 00
 0000008E 6C 00				mainl BYTE 'l', 0
 00000090 00000000			main0 DWORD 0
 00000094 00000003			main3 DWORD 3
 00000098 00000002			main2 DWORD 2
 0000009C 00000001			main1 DWORD 1
 000000A0 6E 65 77 20 63		mainnew_calculating BYTE 'new calculating', 0
	   61 6C 63 75 6C
	   61 74 69 6E 67
	   00
 000000B0 00000007			main7 DWORD 7
 000000B4 6F 70 65 72 61		mainoperation_is_not_10 BYTE 'operation is not 10', 0
	   74 69 6F 6E 20
	   69 73 20 6E 6F
	   74 20 31 30 00
 000000C8 6F 70 65 72 61		mainoperation_is_not_equal BYTE 'operation is not equal', 0
	   74 69 6F 6E 20
	   69 73 20 6E 6F
	   74 20 65 71 75
	   61 6C 00
 000000DF 00000006			main6 DWORD 6
 000000E3 6F 70 65 72 61		mainoperation_less_6 BYTE 'operation less 6', 0
	   74 69 6F 6E 20
	   6C 65 73 73 20
	   36 00
 00000000			.data
 00000000 00000000			mainoperation1 DWORD ?
 00000004 00000000			mainhexvalue1 DWORD ?
 00000008 00000000			maincounter1 DWORD ?
 0000000C 00000000			mainmessage1 DWORD ?

 00000000			.code
 00000000			countsum PROC countsumn1 :  DWORD , countsumm1 :  DWORD 
 00000003  68 00000030 R	push OFFSET countsumcalculating_sum
 00000008  58			pop eax
 00000009  50			push eax
 0000000A  E8 00000000 E	call writestrline
 0000000F  FF 75 08		push countsumn1
 00000012  FF 75 0C		push countsumm1
 00000015  58			pop eax
 00000016  5B			pop ebx
 00000017  03 C3		add eax,ebx
 00000019  50			push eax
 0000001A  72 16		jc OVERFLOW
 0000001C  58			pop eax
				 
				ret
 00000021			ZEROERROR:
 00000021  68 00000000 R	push OFFSET ZEROMESSAGE
 00000026  E8 00000000 E	call writestrline
 0000002B  6A FF		push -1
 0000002D  E8 00000000 E		call		ExitProcess
 00000032			OVERFLOW:
 00000032  68 00000017 R	push OFFSET OVERFLOWMESSAGE
 00000037  E8 00000000 E	call writestrline
 0000003C  6A FF		push -1
 0000003E  E8 00000000 E		call		ExitProcess
 00000043			countsum ENDP

 00000043			coutsomethingelse PROC coutsomethnn1 :  DWORD , coutsomethmm1 :  DWORD 
 00000046  68 00000040 R	push OFFSET coutsomethcalculating_combocalculating_combo
 0000004B  58			pop eax
 0000004C  50			push eax
 0000004D  E8 00000000 E	call writestrline
 00000052  FF 75 08		push coutsomethnn1
 00000055  FF 75 0C		push coutsomethmm1
 00000058  58			pop eax
 00000059  5B			pop ebx
 0000005A  03 C3		add eax,ebx
 0000005C  50			push eax
 0000005D  72 29		jc OVERFLOW
 0000005F  FF 75 08		push coutsomethnn1
 00000062  FF 75 0C		push coutsomethmm1
 00000065  E8 FFFFFF96		call countsum
 0000006A  50			 push eax
 0000006B  58			pop eax
 0000006C  5B			pop ebx
 0000006D  03 C3		add eax,ebx
 0000006F  50			push eax
 00000070  72 16		jc OVERFLOW
 00000072  58			pop eax
				 
				ret
 00000077			ZEROERROR:
 00000077  68 00000000 R	push OFFSET ZEROMESSAGE
 0000007C  E8 00000000 E	call writestrline
 00000081  6A FF		push -1
 00000083  E8 00000000 E		call		ExitProcess
 00000088			OVERFLOW:
 00000088  68 00000017 R	push OFFSET OVERFLOWMESSAGE
 0000008D  E8 00000000 E	call writestrline
 00000092  6A FF		push -1
 00000094  E8 00000000 E		call		ExitProcess
 00000099			coutsomethingelse ENDP

 00000099			main PROC
 00000099  FF 35 00000052 R	push main4
 0000009F  FF 35 00000056 R	push main5
 000000A5  E8 FFFFFF99		call coutsomethingelse
 000000AA  50			 push eax
 000000AB  58			pop eax
 000000AC  50			push eax
 000000AD  8F 05 00000000 R	pop mainoperation1
 000000B3  FF 35 00000000 R	push mainoperation1
 000000B9  58			pop eax
 000000BA  50			push eax
 000000BB  E8 00000000 E	call writenumline
 000000C0  FF 35 0000005A R	push main0x0
 000000C6  58			pop eax
 000000C7  50			push eax
 000000C8  8F 05 00000004 R	pop mainhexvalue1
 000000CE  FF 35 00000004 R	push mainhexvalue1
 000000D4  58			pop eax
 000000D5  50			push eax
 000000D6  E8 00000000 E	call writenumline
 000000DB  FF 35 00000000 R	push mainoperation1
 000000E1  FF 35 0000005E R	push main10
 000000E7  5B			pop ebx
 000000E8  58			pop eax
 000000E9  3B C3		cmp eax, ebx
 000000EB  72 0E		jb SKIP19
 000000ED  68 00000062 R	push OFFSET maincounting_more_then_10
 000000F2  58			pop eax
 000000F3  50			push eax
 000000F4  E8 00000000 E	call writestrline
 000000F9  73 18		jae SKIPELSE23
 000000FB			SKIP19:
 000000FB  68 00000078 R	push OFFSET maincounting_less_then_10
 00000100  58			pop eax
 00000101  50			push eax
 00000102  E8 00000000 E	call writestrline
 00000107  68 0000008E R	push OFFSET mainl
 0000010C  58			pop eax
 0000010D  50			push eax
 0000010E  E8 00000000 E	call writestrline
 00000113			SKIPELSE23:
 00000113  FF 35 00000090 R	push main0
 00000119  58			pop eax
 0000011A  50			push eax
 0000011B  8F 05 00000008 R	pop maincounter1
 00000121  FF 35 00000056 R	push main5
 00000127  E8 00000000 E	call random
 0000012C  59			 pop ecx
 0000012D  50			 push eax
 0000012E  FF 35 00000094 R	push main3
 00000134  FF 35 00000098 R	push main2
 0000013A  E8 00000000 E	call toPow
 0000013F  59			 pop ecx
 00000140  50			 push eax
 00000141  5B			pop ebx
 00000142  58			pop eax
 00000143  F7 E3		mul ebx
 00000145  50			push eax
 00000146  0F 82 0000011F	jc OVERFLOW
 0000014C  58			pop eax
 0000014D  50			push eax
 0000014E  8F 05 00000000 R	pop mainoperation1
 00000154  FF 35 00000000 R	push mainoperation1
 0000015A  FF 35 0000009C R	push main1
 00000160  5B			pop ebx
 00000161  58			pop eax
 00000162  2B C3		sub eax,ebx
 00000164  50			push eax
 00000165  0F 82 00000100	jc OVERFLOW
 0000016B  FF 35 00000094 R	push main3

 00000171  5B				pop ebx
 00000172  58				pop eax
 00000173  85 DB		test ebx, ebx
 00000175  0F 84 000000DF	jz ZEROERROR
 0000017B  99				cdq
 0000017C  F7 F3			div ebx
 0000017E  50				push eax
 0000017F  0F 82 000000E6	jc OVERFLOW
 00000185  58			pop eax
 00000186  50			push eax
 00000187  8F 05 00000000 R	pop mainoperation1
 0000018D  FF 35 00000000 R	push mainoperation1
 00000193  58			pop eax
 00000194  50			push eax
 00000195  E8 00000000 E	call writenumline
 0000019A  68 000000A0 R	push OFFSET mainnew_calculating
 0000019F  58			pop eax
 000001A0  50			push eax
 000001A1  8F 05 0000000C R	pop mainmessage1
 000001A7  FF 35 00000000 R	push mainoperation1
 000001AD  FF 35 000000B0 R	push main7

 000001B3  5B				pop ebx
 000001B4  58				pop eax
 000001B5  85 DB		test ebx, ebx
 000001B7  0F 84 0000009D	jz ZEROERROR
 000001BD  99				cdq
 000001BE  F7 F3			div ebx
 000001C0  52				push edx
 000001C1  0F 82 000000A4	jc OVERFLOW
 000001C7  58			pop eax
 000001C8  50			push eax
 000001C9  8F 05 00000000 R	pop mainoperation1
 000001CF  FF 35 0000005E R	push main10
 000001D5  FF 35 0000005E R	push main10
 000001DB  5B			pop ebx
 000001DC  58			pop eax
 000001DD  3B C3		cmp eax, ebx
 000001DF  75 0D		jne SKIP38
 000001E1  FF 35 0000005E R	push main10
 000001E7  58			pop eax
 000001E8  50			push eax
 000001E9  E8 00000000 E	call writenumline
 000001EE			SKIP38:
 000001EE  FF 35 00000000 R	push mainoperation1
 000001F4  FF 35 00000090 R	push main0
 000001FA  5B			pop ebx
 000001FB  58			pop eax
 000001FC  3B C3		cmp eax, ebx
 000001FE  76 0C		jbe SKIP42
 00000200  68 000000B4 R	push OFFSET mainoperation_is_not_10
 00000205  58			pop eax
 00000206  50			push eax
 00000207  E8 00000000 E	call writestrline
 0000020C			SKIP42:
 0000020C  FF 35 00000000 R	push mainoperation1
 00000212  FF 35 00000056 R	push main5
 00000218  5B			pop ebx
 00000219  58			pop eax
 0000021A  3B C3		cmp eax, ebx
 0000021C  74 0C		je SKIP46
 0000021E  68 000000C8 R	push OFFSET mainoperation_is_not_equal
 00000223  58			pop eax
 00000224  50			push eax
 00000225  E8 00000000 E	call writestrline
 0000022A			SKIP46:
 0000022A  FF 35 00000000 R	push mainoperation1
 00000230  FF 35 000000DF R	push main6
 00000236  5B			pop ebx
 00000237  58			pop eax
 00000238  3B C3		cmp eax, ebx
 0000023A  73 0C		jae SKIP50
 0000023C  68 000000E3 R	push OFFSET mainoperation_less_6
 00000241  58			pop eax
 00000242  50			push eax
 00000243  E8 00000000 E	call writestrline
 00000248			SKIP50:
 00000248  FF 35 00000090 R	push main0
 0000024E  58			pop eax
 0000024F  50			push eax
 00000250  E8 00000000 E	call	system_pause
 00000255  E8 00000000 E	 	call		ExitProcess
 0000025A			ZEROERROR:
 0000025A  68 00000000 R	push OFFSET ZEROMESSAGE
 0000025F  E8 00000000 E	call writestrline
 00000264  6A FF		push -1
 00000266  E8 00000000 E		call		ExitProcess
 0000026B			OVERFLOW:
 0000026B  68 00000017 R	push OFFSET OVERFLOWMESSAGE
 00000270  E8 00000000 E	call writestrline
 00000275  6A FF		push -1
 00000277  E8 00000000 E		call		ExitProcess
 0000027C			 main ENDP
				END main
Microsoft (R) Macro Assembler Version 14.41.34120.0	    12/17/24 12:29:40
ASM.asm							     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

CONST  . . . . . . . . . . . . .	32 Bit	 000000F4 Para	  Public  'CONST'	 ReadOnly
FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000010 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 0000027C Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
countsum . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000043 Public STDCALL
  countsumn1 . . . . . . . . . .	DWord	 bp + 00000008
  countsumm1 . . . . . . . . . .	DWord	 bp + 0000000C
  ZEROERROR  . . . . . . . . . .	L Near	 00000021 _TEXT	
  OVERFLOW . . . . . . . . . . .	L Near	 00000032 _TEXT	
coutsomethingelse  . . . . . . .	P Near	 00000043 _TEXT	Length= 00000056 Public STDCALL
  coutsomethnn1  . . . . . . . .	DWord	 bp + 00000008
  coutsomethmm1  . . . . . . . .	DWord	 bp + 0000000C
  ZEROERROR  . . . . . . . . . .	L Near	 00000077 _TEXT	
  OVERFLOW . . . . . . . . . . .	L Near	 00000088 _TEXT	
main . . . . . . . . . . . . . .	P Near	 00000099 _TEXT	Length= 000001E3 Public STDCALL
  SKIP19 . . . . . . . . . . . .	L Near	 000000FB _TEXT	
  SKIPELSE23 . . . . . . . . . .	L Near	 00000113 _TEXT	
  SKIP38 . . . . . . . . . . . .	L Near	 000001EE _TEXT	
  SKIP42 . . . . . . . . . . . .	L Near	 0000020C _TEXT	
  SKIP46 . . . . . . . . . . . .	L Near	 0000022A _TEXT	
  SKIP50 . . . . . . . . . . . .	L Near	 00000248 _TEXT	
  ZEROERROR  . . . . . . . . . .	L Near	 0000025A _TEXT	
  OVERFLOW . . . . . . . . . . .	L Near	 0000026B _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
OVERFLOWMESSAGE  . . . . . . . .	Byte	 00000017 CONST	
ZEROMESSAGE  . . . . . . . . . .	Byte	 00000000 CONST	
countsumcalculating_sum  . . . .	Byte	 00000030 CONST	
coutsomethcalculating_combocalculating_combo . Byte     00000040 CONST	
main0x0  . . . . . . . . . . . .	DWord	 0000005A CONST	
main0  . . . . . . . . . . . . .	DWord	 00000090 CONST	
main10 . . . . . . . . . . . . .	DWord	 0000005E CONST	
main1  . . . . . . . . . . . . .	DWord	 0000009C CONST	
main2  . . . . . . . . . . . . .	DWord	 00000098 CONST	
main3  . . . . . . . . . . . . .	DWord	 00000094 CONST	
main4  . . . . . . . . . . . . .	DWord	 00000052 CONST	
main5  . . . . . . . . . . . . .	DWord	 00000056 CONST	
main6  . . . . . . . . . . . . .	DWord	 000000DF CONST	
main7  . . . . . . . . . . . . .	DWord	 000000B0 CONST	
maincounter1 . . . . . . . . . .	DWord	 00000008 _DATA	
maincounting_less_then_10  . . .	Byte	 00000078 CONST	
maincounting_more_then_10  . . .	Byte	 00000062 CONST	
mainhexvalue1  . . . . . . . . .	DWord	 00000004 _DATA	
mainl  . . . . . . . . . . . . .	Byte	 0000008E CONST	
mainmessage1 . . . . . . . . . .	DWord	 0000000C _DATA	
mainnew_calculating  . . . . . .	Byte	 000000A0 CONST	
mainoperation1 . . . . . . . . .	DWord	 00000000 _DATA	
mainoperation_is_not_10  . . . .	Byte	 000000B4 CONST	
mainoperation_is_not_equal . . .	Byte	 000000C8 CONST	
mainoperation_less_6 . . . . . .	Byte	 000000E3 CONST	
random . . . . . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
system_pause . . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
toPow  . . . . . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
writenumline . . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
writenum . . . . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
writestrline . . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
writestr . . . . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL

	   0 Warnings
	   0 Errors
